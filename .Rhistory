BCAT = ceiling(runif(n, 0, 2)),
length.bin = ceiling(runif(n, 9, 15))
)
# We can split the data up by YEAR, WAVE and BCAT using the
# aggregate function, and then use lapply to traverse (loop)
# over this list and plot the broken up data.  We then need to
# write a function that will create the plots and the contingency
# table for each permutation of the data
par(mfrow = c(2,2))
myfun <- function(Z){
# do the plotting
with(Z,{
# set up a blank plot
plot(0, 0, type = "n",
xlim = c(1975, 2005), xlab = "Year",
ylim = c(9, 16), ylab = "Length (cm) category",
las = 1)
# add the line for BCAT == 1
abline(lm(length.bin ~ YEAR, subset = (BCAT == 1)),
col = 1, lwd = 1, lty = 1)
# add the line for BCAT == 2
abline(lm(length.bin ~ YEAR, subset = (BCAT == 2)),
col = 2, lwd = 1, lty = 1)
})
# do the contingency table for this wave for each
counts <- with(Z, table(YEAR, length.bin, BCAT))
yr.sum <- rowSums(counts)
props  <- apply(counts, 2, function(x){x/yr.sum})
# I hate this, but im going to hvae to loop down
# the rows of the proportional count table to
# make the bubbles.
# scaling of the bubbles
sc <- 3
# offset for the BCAT bubbles within a year
x.offset <- 0.25 * c(-1, 1)
# extract the x and y numbers for plotting from the
# contingency table
all.years <- as.numeric(rownames(props))
all.lengths     <- as.numeric(colnames(props))
# j across the BCAT variable (i.e. dimension = dim = 3)
for (j in 1:dim(props)[3]){
# loop down the rows
for (i in 1:nrow(props)){
# construct the year vector which is the same year
# for all lengths
x <- rep(all.lengths[i], length(all.lengths))
points(x + x.offset[j], all.lengths, cex = sc * props,
pch = 1, col = j)
}
}
}
lapply(split(mydf, list(mydf$WAVE)),  myfun)
# test code
test <- split(mydf, list(mydf$WAVE))
Z <- test[[1]]
# 6-Oct-2016
# Fulbright at SIO
# Template file for Noah's analysis
# Takes long form data, breaks it up by YEAR and WAVE,
#   creates a contingency table of counts of length frequency bins,
#   and produces a bubble plot along with a trend line for the mean
#   or median as desired.
# create a fake dataset to work with
# YEAR = the year
# WAVE = effectively season ( 1 - 4 in this case)
# BCAT = inshore / offshore
# length.bin = one of several lnegth categories
n <- 100 # number of observations
mydf <- data.frame( YEAR = ceiling(runif(n, 1980, 2000)),
WAVE = ceiling(runif(n, 0, 4)),
BCAT = ceiling(runif(n, 0, 2)),
length.bin = ceiling(runif(n, 9, 15))
)
# We can split the data up by YEAR, WAVE and BCAT using the
# aggregate function, and then use lapply to traverse (loop)
# over this list and plot the broken up data.  We then need to
# write a function that will create the plots and the contingency
# table for each permutation of the data
par(mfrow = c(2,2))
myfun <- function(Z){
# do the plotting
with(Z,{
# set up a blank plot
plot(0, 0, type = "n",
xlim = c(1975, 2005), xlab = "Year",
ylim = c(9, 16), ylab = "Length (cm) category",
las = 1)
# add the line for BCAT == 1
abline(lm(length.bin ~ YEAR, subset = (BCAT == 1)),
col = 1, lwd = 1, lty = 1)
# add the line for BCAT == 2
abline(lm(length.bin ~ YEAR, subset = (BCAT == 2)),
col = 2, lwd = 1, lty = 1)
})
# do the contingency table for this wave for each
counts <- with(Z, table(YEAR, length.bin, BCAT))
yr.sum <- rowSums(counts)
props  <- apply(counts, 2, function(x){x/yr.sum})
# I hate this, but im going to hvae to loop down
# the rows of the proportional count table to
# make the bubbles.
# scaling of the bubbles
sc <- 3
# offset for the BCAT bubbles within a year
x.offset <- 0.25 * c(-1, 1)
# extract the x and y numbers for plotting from the
# contingency table
all.years <- as.numeric(rownames(props))
all.lengths     <- as.numeric(colnames(props))
# j across the BCAT variable (i.e. dimension = dim = 3)
for (j in 1:2){
# loop down the rows
for (i in 1:nrow(props)){
# construct the year vector which is the same year
# for all lengths
x <- rep(all.lengths[i], length(all.lengths))
points(x + x.offset[j], all.lengths, cex = sc * props,
pch = 1, col = j)
}
}
}
lapply(split(mydf, list(mydf$WAVE)),  myfun)
# test code
test <- split(mydf, list(mydf$WAVE))
Z <- test[[1]]
props
all.years <- as.numeric(rownames(props))
all.years
i<-1
x <- rep(all.lengths[i], length(all.lengths))
all.lengths     <- as.numeric(colnames(props))
x <- rep(all.lengths[i], length(all.lengths))
x
rep(all.lengths[i], length(all.lengths))
all.lengths
props
test <- split(mydf, list(mydf$WAVE))
Z <- test[[1]]
counts <- with(Z, table(YEAR, length.bin, BCAT))
counts
yr.sum <- rowSums(counts)
props  <- apply(counts, 2, function(x){x/yr.sum})
# I hate this, but im going to hvae to loop down
# the rows of the proportional count table to
# make the bubbles.
# scaling of the bubbles
sc <- 3
# offset for the BCAT bubbles within a year
x.offset <- 0.25 * c(-1, 1)
# extract the x and y numbers for plotting from the
# contingency table
all.years <- as.numeric(rownames(props))
all.lengths     <- as.numeric(colnames(props))
all.years
all.lengths
# j across the BCAT variable (i.e. dimension = dim = 3)
for (j in 1:2){
# loop down the rows
for (i in 1:nrow(props)){
# construct the year vector which is the same year
# for all lengths
x <- rep(all.lengths[i], length(all.lengths))
points(x + x.offset[j], all.lengths, cex = sc * props,
pch = 1, col = j)
}
}
# 6-Oct-2016
# Fulbright at SIO
# Template file for Noah's analysis
# Takes long form data, breaks it up by YEAR and WAVE,
#   creates a contingency table of counts of length frequency bins,
#   and produces a bubble plot along with a trend line for the mean
#   or median as desired.
# create a fake dataset to work with
# YEAR = the year
# WAVE = effectively season ( 1 - 4 in this case)
# BCAT = inshore / offshore
# length.bin = one of several lnegth categories
n <- 100 # number of observations
mydf <- data.frame( YEAR = ceiling(runif(n, 1980, 2000)),
WAVE = ceiling(runif(n, 0, 4)),
BCAT = ceiling(runif(n, 0, 2)),
length.bin = ceiling(runif(n, 9, 15))
)
# We can split the data up by YEAR, WAVE and BCAT using the
# aggregate function, and then use lapply to traverse (loop)
# over this list and plot the broken up data.  We then need to
# write a function that will create the plots and the contingency
# table for each permutation of the data
par(mfrow = c(2,2))
myfun <- function(Z){
# do the plotting
with(Z,{
# set up a blank plot
plot(0, 0, type = "n",
xlim = c(1975, 2005), xlab = "Year",
ylim = c(9, 16), ylab = "Length (cm) category",
las = 1)
# add the line for BCAT == 1
abline(lm(length.bin ~ YEAR, subset = (BCAT == 1)),
col = 1, lwd = 1, lty = 1)
# add the line for BCAT == 2
abline(lm(length.bin ~ YEAR, subset = (BCAT == 2)),
col = 2, lwd = 1, lty = 1)
})
# do the contingency table for this wave for each
counts <- with(Z, table(YEAR, length.bin, BCAT))
yr.sum <- rowSums(counts)
props  <- apply(counts, 2, function(x){x/yr.sum})
# I hate this, but im going to hvae to loop down
# the rows of the proportional count table to
# make the bubbles.
# scaling of the bubbles
sc <- 3
# offset for the BCAT bubbles within a year
x.offset <- 0.25 * c(-1, 1)
# extract the x and y numbers for plotting from the
# contingency table
all.years <- as.numeric(rownames(props))
all.lengths     <- as.numeric(colnames(props))
# j across the BCAT variable (i.e. dimension = dim = 3)
for (j in 1:2){
# loop down the rows
for (i in 1:nrow(props)){
# construct the year vector which is the same year
# for all lengths
x <- rep(all.lengths[i], length(all.lengths))
points(x + x.offset[j], all.lengths, cex = sc * props[i,,j],
pch = 1, col = j)
}
}
}
lapply(split(mydf, list(mydf$WAVE)),  myfun)
# test code
test <- split(mydf, list(mydf$WAVE))
Z <- test[[1]]
counts <- with(Z, table(YEAR, length.bin, BCAT))
yr.sum <- rowSums(counts)
props  <- apply(counts, 2, function(x){x/yr.sum})
props
counts
props  <- apply(counts, c(2,3), function(x){x/yr.sum})
props
source('~/Documents/Projects/random-snippets/contingency-table-template-noah.R', echo=TRUE)
counts <- with(Z, table(YEAR, length.bin, BCAT))
yr.sum <- rowSums(counts)
props  <- apply(counts, c(2,3), function(x){x/yr.sum})
props
Z <- test[[4]]
counts <- with(Z, table(YEAR, length.bin, BCAT))
yr.sum <- rowSums(counts)
props  <- apply(counts, c(2,3), function(x){x/yr.sum})
# I hate this, but im going to hvae to loop down
# the rows of the proportional count table to
# make the bubbles.
# scaling of the bubbles
sc <- 3
# offset for the BCAT bubbles within a year
x.offset <- 0.25 * c(-1, 1)
# extract the x and y numbers for plotting from the
# contingency table
all.years <- as.numeric(rownames(props))
all.lengths     <- as.numeric(colnames(props))
# j across the BCAT variable (i.e. dimension = dim = 3)
for (j in 1:2){
# loop down the rows
for (i in 1:nrow(props)){
# construct the year vector which is the same year
# for all lengths
x <- rep(all.lengths[i], length(all.lengths))
points(x + x.offset[j], all.lengths, cex = sc * props[i,,j],
pch = 1, col = j)
}
}
x
i<-1
x <- rep(all.lengths[i], length(all.lengths))
x
all.lengths
source('~/Documents/Projects/random-snippets/contingency-table-template-noah.R', echo=TRUE)
# 6-Oct-2016
# Fulbright at SIO
# Template file for Noah's analysis
# Takes long form data, breaks it up by YEAR and WAVE,
#   creates a contingency table of counts of length frequency bins,
#   and produces a bubble plot along with a trend line for the mean
#   or median as desired.
# create a fake dataset to work with
# YEAR = the year
# WAVE = effectively season ( 1 - 4 in this case)
# BCAT = inshore / offshore
# length.bin = one of several lnegth categories
n <- 1000 # number of observations
mydf <- data.frame( YEAR = ceiling(runif(n, 1980, 2000)),
WAVE = ceiling(runif(n, 0, 4)),
BCAT = ceiling(runif(n, 0, 2)),
length.bin = ceiling(runif(n, 9, 15))
)
# We can split the data up by YEAR, WAVE and BCAT using the
# aggregate function, and then use lapply to traverse (loop)
# over this list and plot the broken up data.  We then need to
# write a function that will create the plots and the contingency
# table for each permutation of the data
par(mfrow = c(2,2))
myfun <- function(Z){
# do the plotting
with(Z,{
# set up a blank plot
plot(0, 0, type = "n",
xlim = c(1975, 2005), xlab = "Year",
ylim = c(9, 16), ylab = "Length (cm) category",
las = 1)
# add the line for BCAT == 1
abline(lm(length.bin ~ YEAR, subset = (BCAT == 1)),
col = 1, lwd = 1, lty = 1)
# add the line for BCAT == 2
abline(lm(length.bin ~ YEAR, subset = (BCAT == 2)),
col = 2, lwd = 1, lty = 1)
})
# do the contingency table for this wave for each
counts <- with(Z, table(YEAR, length.bin, BCAT))
yr.sum <- rowSums(counts)
props  <- apply(counts, c(2,3), function(x){x/yr.sum})
# I hate this, but im going to hvae to loop down
# the rows of the proportional count table to
# make the bubbles.
# scaling of the bubbles
sc <- 2
# offset for the BCAT bubbles within a year
x.offset <- 0.25 * c(-1, 1)
# extract the x and y numbers for plotting from the
# contingency table
all.years <- as.numeric(rownames(props))
all.lengths     <- as.numeric(colnames(props))
# j across the BCAT variable (i.e. dimension = dim = 3)
for (j in 1:2){
# loop down the rows
for (i in 1:nrow(props)){
# construct the year vector which is the same year
# for all lengths
x <- rep(all.years[i], length(all.lengths))
points(x + x.offset[j], all.lengths, cex = sc * props[i,,j],
pch = 1, col = j)
}
}
}
lapply(split(mydf, list(mydf$WAVE)),  myfun)
# test code
test <- split(mydf, list(mydf$WAVE))
Z <- test[[4]]
# 6-Oct-2016
# Fulbright at SIO
# Template file for Noah's analysis
# Takes long form data, breaks it up by YEAR and WAVE,
#   creates a contingency table of counts of length frequency bins,
#   and produces a bubble plot along with a trend line for the mean
#   or median as desired.
# create a fake dataset to work with
# YEAR = the year
# WAVE = effectively season ( 1 - 4 in this case)
# BCAT = inshore / offshore
# length.bin = one of several lnegth categories
n <- 1000 # number of observations
mydf <- data.frame( YEAR = ceiling(runif(n, 1980, 2000)),
WAVE = ceiling(runif(n, 0, 4)),
BCAT = ceiling(runif(n, 0, 2)),
length.bin = ceiling(runif(n, 9, 15))
)
# We can split the data up by YEAR, WAVE and BCAT using the
# aggregate function, and then use lapply to traverse (loop)
# over this list and plot the broken up data.  We then need to
# write a function that will create the plots and the contingency
# table for each permutation of the data
par(mfrow = c(2,2))
myfun <- function(Z){
# do the plotting
with(Z,{
# set up a blank plot
plot(0, 0, type = "n",
xlim = c(1975, 2005), xlab = "Year",
ylim = c(9, 16), ylab = "Length (cm) category",
las = 1)
# add the line for BCAT == 1
abline(lm(length.bin ~ YEAR, subset = (BCAT == 1)),
col = 1, lwd = 1, lty = 1)
# add the line for BCAT == 2
abline(lm(length.bin ~ YEAR, subset = (BCAT == 2)),
col = 2, lwd = 1, lty = 1)
})
# do the contingency table for this wave for each
counts <- with(Z, table(YEAR, length.bin, BCAT))
yr.sum <- rowSums(counts)
props  <- apply(counts, c(2,3), function(x){x/yr.sum})
# I hate this, but im going to hvae to loop down
# the rows of the proportional count table to
# make the bubbles.
# scaling of the bubbles
sc <- 3
# offset for the BCAT bubbles within a year
x.offset <- 0.25 * c(-1, 1)
# extract the x and y numbers for plotting from the
# contingency table
all.years <- as.numeric(rownames(props))
all.lengths     <- as.numeric(colnames(props))
# j across the BCAT variable (i.e. dimension = dim = 3)
for (j in 1:2){
# loop down the rows
for (i in 1:nrow(props)){
# construct the year vector which is the same year
# for all lengths
x <- rep(all.years[i], length(all.lengths))
points(x + x.offset[j], all.lengths, cex = sc * props[i,,j],
pch = 1, col = j)
}
}
}
lapply(split(mydf, list(mydf$WAVE)),  myfun)
# test code
test <- split(mydf, list(mydf$WAVE))
Z <- test[[4]]
source('~/Documents/Projects/random-snippets/contingency-table-template-noah.R', echo=TRUE)
source('~/Documents/Projects/random-snippets/contingency-table-template-noah.R', echo=TRUE)
source('~/Documents/Projects/random-snippets/contingency-table-template-noah.R')
source('~/Documents/Projects/random-snippets/contingency-table-template-noah.R')
out
res <- lapply(split(mydf, list(mydf$WAVE)),  myfun)
res
?lapply
res <- sapply(split(mydf, list(mydf$WAVE)),  myfun)
res
source('~/Documents/Projects/random-snippets/contingency-table-template-noah.R')
res
res <- lapply(split(mydf, list(mydf$WAVE)),  myfun)
res
test <- dev(1)
test <- with(Z, table(YEAR, length.bin, BCAT, WAVE))
test <- with(mydf, table(YEAR, length.bin, BCAT, WAVE))
#   and produces a bubble plot along with a trend line for the mean
#   or median as desired.
# create a fake dataset to work with
# YEAR = the year
# WAVE = effectively season ( 1 - 4 in this case)
# BCAT = inshore / offshore
# length.bin = one of several lnegth categories
n <- 1000 # number of observations
mydf <- data.frame( YEAR = ceiling(runif(n, 1979, 2000)),
WAVE = ceiling(runif(n, 0, 4)),
BCAT = ceiling(runif(n, 0, 2)),
length.bin = ceiling(runif(n, 9, 15))
)
test <- with(mydf, table(YEAR, length.bin, BCAT, WAVE))
test
counts.test <- with(mydf, table(YEAR, length.bin, BCAT, WAVE))
props.test <- apply(counts.test, c(2,3), function(x){x/yr.sum})
counts.test <- with(mydf, table(YEAR, length.bin, BCAT, WAVE))
yr.sum <- rowSums(counts)
props.test <- apply(counts.test, c(2,3), function(x){x/yr.sum})
yr.sum <- rowSums(counts)
counts.test <- with(mydf, table(YEAR, length.bin, BCAT, WAVE))
yr.sum <- rowSums(counts.test)
props.test <- apply(counts.test, c(2,3), function(x){x/yr.sum})
props.test
W<-props.test[,,1,2]
counts.test <- with(mydf, table(YEAR, length.bin, BCAT, WAVE))
yr.sum <- rowSums(counts.test)
props.test <- apply(counts.test, c(2,3), function(x){x/yr.sum})
props.test()
props.test
counts.test
props.test <- apply(counts.test, c(2,3,4), function(x){x/yr.sum})
props.test
row.names(props.test)
rownames(props.test)
?apply
apply(props.test, c(1,3,4),
function(W){with(W,
{points(rep(as.numeric(rownames(W)), length(10:15)),
10:15, cex = 3 * W)
})})
apply(props.test, c(1,3,4),print())
apply(props.test, c(1,3,4),print
apply(props.test, c(1,3,4),print)
apply(props.test, c(1,3,4), print)
apply(props.test, c(1,3,4), sum)
apply(props.test, c(1,3,4), print)
apply(props.test, c(1,3,4), rownames)
10:15, cex = 3 * W)})})
function(W){with(W,{points(rep(as.numeric(rownames(W)), length(10:15)),
apply(props.test, c(1,3,4), function(W){with(W,{points(rep(as.numeric(rownames(W)),
length(10:15)),
10:15, cex = 3 * W)})})
function(W){with(W,{points(rep(as.numeric(rownames(W)), length(10:15)),
apply(props.test, c(1,3,4), function(W){with(W,{points(rep(as.numeric(rownames(W)),
length(10:15)),
10:15, cex = 3 * W)})})
source('~/Documents/Projects/random-snippets/contingency-table-template-noah.R')
n <- 1000 # number of observations
mydf <- data.frame( YEAR = ceiling(runif(n, 1979, 2000)),
WAVE = ceiling(runif(n, 0, 4)),
BCAT = ceiling(runif(n, 0, 2)),
length.bin = ceiling(runif(n, 9, 15))
)
head(mydf)
source('~/Documents/Projects/random-snippets/contingency-table-template-noah.R')
res[[2]]
source('~/Documents/Projects/random-snippets/contingency-table-template-noah.R')
source('~/Documents/Projects/random-snippets/contingency-table-template-noah.R')
?rowSums
c("red", "blue")[2]
palette(c("red","blue"))
?palette
palette(rainbow(6))
